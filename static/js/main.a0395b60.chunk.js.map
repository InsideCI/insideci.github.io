{"version":3,"sources":["components/Button/index.tsx","components/Button/Button.tsx","components/Input/index.tsx","components/Input/Input.tsx","pages/Start/Start.tsx","store/client.tsx","App.tsx","index.tsx","assets/images/landing/bottom-left.svg","assets/images/landing/bottom-right.svg","assets/images/landing/top-left.svg","assets/images/landing/top-right.svg"],"names":["Button","props","text","icon","color","round","light","faded","full","rest","classes","classNames","className","Input","name","label","small","centered","useField","fieldName","defaultValue","registerField","error","inputRef","useRef","classesComponent","classesInput","useEffect","path","ref","current","htmlFor","autoComplete","id","client","resource","axiosClient","axios","create","baseURL","API_ADDRESS","resourceStr","substr","list","params","get","delete","post","model","put","NewGenericClient","Start","useState","section","setSection","setError","setGuest","student","setStudent","onSubmit","then","response","data","catch","console","log","sections","component","key","style","div","onClick","placeholder","capitalize","nome","split","toLowerCase","sectionTransition","useTransition","item","config","slow","from","position","opacity","transform","enter","leave","src","topLeft","alt","topRight","bottomLeft","bottomRight","map","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a0395b60.chunk.js","sourcesContent":["import Button from './Button';\r\n\r\nexport default Button;\r\n","import './Button.scss';\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\n\r\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  icon?: React.ReactNode;\r\n  text?: string;\r\n  color?: 'primary' | 'white';\r\n  round?: boolean;\r\n  light?: boolean;\r\n  faded?: boolean;\r\n  full?: boolean;\r\n}\r\n\r\nconst Button: React.FC<Props> = (props) => {\r\n  const { text, icon, color, round, light, faded, full, ...rest } = props;\r\n\r\n  const classes = classNames(\r\n    'button',\r\n    color ? color : 'transparent',\r\n    round && 'round',\r\n    light && 'light',\r\n    faded && 'faded',\r\n    full && 'full'\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {icon && <span>{icon}</span>}\r\n      <button className={classes} {...rest}>\r\n        {text}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Input from './Input';\r\n\r\nexport default Input;\r\n","import './Input.scss';\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nimport classNames from 'classnames';\r\nimport { useField } from '@unform/core';\r\n\r\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  label?: string;\r\n  color?: string;\r\n  small?: boolean;\r\n  full?: boolean;\r\n  centered?: boolean;\r\n}\r\n\r\nconst Input: React.FC<Props> = (props) => {\r\n  const { name, label, color, small, full, centered, ...rest } = props;\r\n\r\n  const { fieldName, defaultValue = '', registerField, error } = useField(name);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const classesComponent = classNames('input', full && 'full');\r\n  const classesInput = classNames(\r\n    color ? color : 'transparent',\r\n    small && 'small',\r\n    full && 'full',\r\n    centered && 'centered'\r\n  );\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      path: 'value',\r\n      ref: inputRef.current,\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <div className={classesComponent}>\r\n      {label && <label htmlFor={fieldName}>{label}</label>}\r\n      <input\r\n        autoComplete={'off'}\r\n        className={classesInput}\r\n        id={fieldName}\r\n        ref={inputRef}\r\n        defaultValue={defaultValue}\r\n        {...rest}\r\n      />\r\n      {error && <footer>{error}</footer>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import './Start.scss';\r\n\r\nimport { AnimatedValue, animated, config, useTransition } from 'react-spring';\r\nimport React, { CSSProperties, useState } from 'react';\r\n\r\nimport Button from 'components/Button';\r\nimport { Form } from '@unform/web';\r\nimport Input from 'components/Input';\r\nimport { NewGenericClient } from '../../store/client';\r\nimport { Student } from 'store/types/models';\r\nimport { SubmitHandler } from '@unform/core';\r\nimport bottomLeft from 'assets/images/landing/bottom-left.svg';\r\nimport bottomRight from 'assets/images/landing/bottom-right.svg';\r\nimport { capitalize } from 'underscore.string';\r\nimport topLeft from 'assets/images/landing/top-left.svg';\r\nimport topRight from 'assets/images/landing/top-right.svg';\r\n\r\ninterface Form {\r\n  id: number;\r\n}\r\n\r\nconst client = NewGenericClient<Student>('students');\r\n\r\ntype Props = React.HTMLProps<HTMLDivElement>;\r\n\r\nconst Start: React.FC<Props> = () => {\r\n  const [section, setSection] = useState(0);\r\n  const [error, setError] = useState(false);\r\n  const [guest, setGuest] = useState(false);\r\n  const [student, setStudent] = useState<Student>();\r\n\r\n  const onSubmit: SubmitHandler<Form> = ({ id }) => {\r\n    if (id)\r\n      client\r\n        .get(id)\r\n        .then((response) => {\r\n          setStudent(response.data);\r\n          setSection(2);\r\n        })\r\n        .catch((error) => {\r\n          setError(true);\r\n          console.log(error);\r\n        });\r\n  };\r\n\r\n  const background = () => (\r\n    <section className={'background'}>\r\n      <img className={'tl'} src={topLeft} alt=\"topLeft\" />\r\n      <img className={'tr'} src={topRight} alt=\"topRight\" />\r\n      <img className={'bl'} src={bottomLeft} alt=\"bottomLeft\" />\r\n      <img className={'br'} src={bottomRight} alt=\"bottomRight\" />\r\n    </section>\r\n  );\r\n\r\n  const welcome = (key: string, style: AnimatedValue<CSSProperties>) => (\r\n    <animated.div key={key} style={style} className=\"welcome\">\r\n      <header>\r\n        <h4>Bem-vindo ao</h4>\r\n        <h1>CInside</h1>\r\n      </header>\r\n      <footer>\r\n        <Button full text={'Entrar'} onClick={() => setSection(1)} />\r\n      </footer>\r\n    </animated.div>\r\n  );\r\n\r\n  const credentials = (key: string, style: AnimatedValue<CSSProperties>) => (\r\n    <animated.div key={key} style={style} className={'credentials'}>\r\n      <Form onSubmit={onSubmit} name={'credentials'}>\r\n        <Input name={'id'} placeholder={'digite sua matricula'} centered />\r\n        <Button text={'entrar'} light />\r\n      </Form>\r\n      {error && <span>deu bode morales</span>}\r\n      <footer className={'guest'}>\r\n        <Button\r\n          onClick={() => setGuest(true)}\r\n          full\r\n          text={'entrar como visitante'}\r\n        />\r\n      </footer>\r\n    </animated.div>\r\n  );\r\n\r\n  const greetings = (key: string, style: AnimatedValue<CSSProperties>) => {\r\n    return (\r\n      <animated.div key={key} style={style} className={'greetings'}>\r\n        {student && (\r\n          <span>\r\n            Olá {capitalize(student.nome.split(' ')[0].toLowerCase())}\r\n          </span>\r\n        )}\r\n      </animated.div>\r\n    );\r\n  };\r\n\r\n  const sections = [\r\n    { id: 0, component: welcome },\r\n    { id: 1, component: credentials },\r\n    { id: 2, component: greetings },\r\n  ];\r\n\r\n  const sectionTransition = useTransition(\r\n    sections[section],\r\n    (item) => item.id,\r\n    {\r\n      config: config.slow,\r\n      from: {\r\n        position: 'absolute',\r\n        opacity: 0,\r\n        transform: 'translate3d(100%,0,0)',\r\n      },\r\n      enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\r\n      leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className={'landing'}>\r\n      {background()}\r\n      {sectionTransition.map(({ item, props, key }) =>\r\n        item.component(key, props)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import { API_ADDRESS, API_PORT } from '../config';\r\nimport { GenericResource, Params } from './types/configs';\r\n\r\nimport axios from 'axios';\r\n\r\n/**\r\n * Returns a set of basic endpoint generic functions based on desired type.\r\n * @param resource Endpoint resource string.\r\n */\r\nexport function NewGenericClient<T>(resource: string): GenericResource<T> {\r\n  const axiosClient = axios.create({\r\n    baseURL: API_ADDRESS + API_PORT,\r\n  });\r\n\r\n  const resourceStr = resource[0] === '/' ? resource.substr(1) : resource;\r\n\r\n  return {\r\n    list: (params: Params) =>\r\n      axiosClient.get<T>(`/${resourceStr}`, {\r\n        params,\r\n      }),\r\n    get: (id: number) => axiosClient.get<T>(`/${resourceStr}/${id}`),\r\n    delete: (id: number) => axiosClient.delete<T>(`/${resourceStr}/${id}`),\r\n    post: (model: T) => axiosClient.post<T>(`/${resourceStr}`, model),\r\n    put: (id: number, model: T) =>\r\n      axiosClient.put<T>(`/${resourceStr}/${id}`, model),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Start from './pages/Start/Start';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Start id=\"start-page\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/bottom-left.f8b68715.svg\";","module.exports = __webpack_public_path__ + \"static/media/bottom-right.fe775774.svg\";","module.exports = __webpack_public_path__ + \"static/media/top-left.26c07d1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/top-right.74681e9a.svg\";"],"sourceRoot":""}